"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.throwException = exports.encodeError = exports.isError = exports.isNamedError = exports.NamedError = void 0;
class NamedError extends Error {
    constructor(name, message) {
        super(message);
        this.name = name;
    }
}
exports.NamedError = NamedError;
exports.isNamedError = (data) => !!(data === null || data === void 0 ? void 0 : data.name) && !!(data === null || data === void 0 ? void 0 : data.message);
exports.isError = (data) => !!(data === null || data === void 0 ? void 0 : data.stack) && !!(data === null || data === void 0 ? void 0 : data.name);
exports.encodeError = (error) => !exports.isError(error) ? error : ['name', ...Object.getOwnPropertyNames(error)]
    .filter(key => !['stack'].includes(key))
    .reduce((acc, key) => {
    acc[key] = error[key];
    return acc;
}, Object.create(null));
exports.throwException = (error) => { throw error; };
