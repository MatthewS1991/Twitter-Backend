import { Subject } from 'rxjs';
import { EffectContext } from '../../effects/effects.interface';
import { HttpServer, HttpRequest } from '../http.interface';
import { HttpEffectResponse, HttpErrorEffect, HttpOutputEffect } from '../effects/http.effects.interface';
import { Routing } from './http.router.interface';
export declare const resolveRouting: (routing: Routing, ctx: EffectContext<HttpServer>) => (output$?: HttpOutputEffect<HttpRequest<unknown, unknown, unknown>, HttpEffectResponse<any>> | undefined, error$?: HttpErrorEffect<Error> | undefined) => {
    resolve: (req: HttpRequest) => void;
    errorSubject: Subject<{
        error: Error;
        req: HttpRequest;
    }>;
    outputSubject: Subject<{
        res: HttpEffectResponse;
        req: HttpRequest;
    }>;
};
//# sourceMappingURL=http.router.resolver.v2.d.ts.map