"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.httpListener = void 0;
const http_responseHandler_1 = require("../response/http.responseHandler");
const http_router_resolver_v2_1 = require("../router/http.router.resolver.v2");
const http_router_factory_1 = require("../router/http.router.factory");
const effectsContext_factory_1 = require("../../effects/effectsContext.factory");
const context_hook_1 = require("../../context/context.hook");
const listener_factory_1 = require("../../listener/listener.factory");
const http_server_tokens_1 = require("./http.server.tokens");
exports.httpListener = listener_factory_1.createListener(config => ask => {
    const { effects = [], middlewares = [], output$, error$, } = config !== null && config !== void 0 ? config : {};
    const client = context_hook_1.useContext(http_server_tokens_1.HttpServerClientToken)(ask);
    const effectContext = effectsContext_factory_1.createEffectContext({ ask, client });
    const routing = http_router_factory_1.factorizeRoutingWithDefaults(effects, middlewares !== null && middlewares !== void 0 ? middlewares : []);
    const { resolve } = http_router_resolver_v2_1.resolveRouting(routing, effectContext)(output$, error$);
    const handle = (req, res) => {
        const marbleReq = req;
        const marbleRes = res;
        marbleRes.send = http_responseHandler_1.handleResponse(ask)(marbleRes)(marbleReq);
        marbleReq.response = marbleRes;
        resolve(marbleReq);
    };
    handle.config = { routing };
    return handle;
});
